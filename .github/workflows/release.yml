name: Build Go binaries

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.1'
          check-latest: true
          cache: true

      - name: Install gox
        run: |
          go install github.com/mitchellh/gox@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binary
#        uses: docker://ghcr.io/local-deploy/build-release:1.1.2
        run: |
          BINARY_PATH="${GITHUB_WORKSPACE}/bin"
          BINARY_NAME=$(basename "${GITHUB_REPOSITORY}")
          RELEASE_TAG=$(basename "${GITHUB_REF}")
          RELEASE_ASSET_NAME=${BINARY_NAME}-${RELEASE_TAG}
          TARGETS="linux/amd64 linux/arm64 darwin/amd64 darwin/arm64"

          echo "----> Setting up repository"
          mkdir -p "${BINARY_PATH}"

          echo "----> Loading dependencies"
          go mod download

          echo "----> Building"
          gox -osarch="${TARGETS}" -output="${BINARY_PATH}/${BINARY_NAME}_{{.OS}}_{{.Arch}}"

          echo "----> Compress files"
          tar cvfz "${RELEASE_ASSET_NAME}"."${GITHUB_REF}"tar.gz config-files bin

          echo "----> Build is complete"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Make release
        run: |
          BINARY_NAME=$(basename "${GITHUB_REPOSITORY}")
          RELEASE_TAG=$(basename "${GITHUB_REF}")
          RELEASE_ASSET_NAME=${BINARY_NAME}-${RELEASE_TAG}
          hub release create -a "${GITHUB_WORKSPACE}"/"${RELEASE_ASSET_NAME}".tar.gz -m "${RELEASE_TAG}" "${GITHUB_REF}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
