name: Build and release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

#on:
#  push:
#    tags:
#      - "*"

on: push

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { runner: macos-latest,  os: darwin,  arch: amd64, tags: netcgo, cache: "~/Library/Caches/go-build" }
          - { runner: macos-latest,  os: darwin,  arch: arm64, tags: netcgo, cache: "~/Library/Caches/go-build" }
          - { runner: ubuntu-latest, os: linux,   arch: amd64, env: CGO_ENABLED=0, cache: "~/.cache/go-build" }
          - { runner: ubuntu-latest, os: linux,   arch: arm64, env: CGO_ENABLED=0, cache: "~/.cache/go-build" }
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Enable cache
        uses: actions/cache@v3
        with:
          path: |
            "${{ matrix.cache }}"
            ~/go/pkg/mod
          key: ${{ matrix.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.arch }}-go-

      - name: Build
        run: |
          mkdir -p "$GITHUB_WORKSPACE/dist"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o $GITHUB_WORKSPACE/dist/${{ matrix.os }}_${{ matrix.arch }}/dl ./...

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.os }}-${{ matrix.arch }}
          path: dist
